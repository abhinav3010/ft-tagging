{"version":3,"sources":["Components/tagging-rect/index.jsx","Components/taggable-image/index.jsx","group-sample.jpeg","App.js","index.js"],"names":["TaggingRect","props","onInputChange","event","setState","tagInput","target","value","onInputClick","stopPropagation","handleKeyPress","code","key","rectCoOrdinates","onSaveTag","state","inputRef","React","createRef","prevProps","isEditing","this","current","focus","x","y","tagText","className","style","top","left","autoFocus","onChange","ref","onClick","onKeyPress","Component","TaggableImage","handleTagging","imgRef","clickX","clientX","clickY","clientY","imgRect","getBoundingClientRect","imgHeight","height","imgWidth","width","taggingEnabled","window","removeEventListener","onToggleTag","tagToDisplay","addEventListener","saveTag","coOrdinates","savedTags","rectX","rectY","onMouseMoveOverImg","i","length","tagToShow","renderTagOnHover","src","alt","onMouseMove","App","SampleImageUrl","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.970cc0fa.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./styles.css\";\n\nclass TaggingRect extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tagInput: \"\",\n    };\n    this.inputRef = React.createRef();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { isEditing } = this.props;\n    if (prevProps.rectCoOrdinates !== this.props.rectCoOrdinates && isEditing) {\n      this.setState({\n        tagInput: \"\",\n      });\n      if (this.inputRef.current) {\n        this.inputRef.current.focus();\n      }\n    }\n  }\n\n  onInputChange = (event) => {\n    this.setState({\n      tagInput: event.target.value,\n    });\n  };\n\n  onInputClick = (event) => {\n    event.stopPropagation();\n  };\n\n  handleKeyPress = (event) => {\n    const keyCode = event.code || event.key;\n    if (keyCode === \"Enter\") {\n      const { rectCoOrdinates, onSaveTag } = this.props;\n      const { tagInput } = this.state;\n      if (!tagInput) {\n        return;\n      }\n      onSaveTag && onSaveTag(rectCoOrdinates, tagInput);\n    }\n  };\n\n  render() {\n    const {\n      isEditing,\n      rectCoOrdinates: { x, y },\n      tagText,\n    } = this.props;\n    const { tagInput } = this.state;\n    return (\n      <div\n        className=\"tagging-rect\"\n        style={{ top: `${y - 50}px`, left: `${x - 40}px` }}\n      >\n        <div className=\"tag-window\"></div>\n        {isEditing ? (\n          <input\n            autoFocus\n            className=\"tag-input\"\n            onChange={this.onInputChange}\n            value={tagInput}\n            ref={this.inputRef}\n            onClick={this.onInputClick}\n            onKeyPress={this.handleKeyPress}\n          />\n        ) : (\n          <div className=\"tag-text\">{tagText}</div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default TaggingRect;\n","import React, { Component, createRef } from \"react\";\nimport TaggingRect from \"../tagging-rect/index\";\nimport \"./styles.css\";\n\nclass TaggableImage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      taggingEnabled: false,\n      rectCoOrdinates: null,\n      savedTags: [],\n      tagToShow: null,\n    };\n    this.imgRef = createRef();\n  }\n\n  handleTagging = (event) => {\n    if (!this.imgRef.current) {\n      return;\n    }\n    const clickX = event.clientX;\n    const clickY = event.clientY;\n    const imgRect = this.imgRef.current.getBoundingClientRect();\n    const imgHeight = imgRect.height;\n    const imgWidth = imgRect.width;\n    if (\n      clickX >= imgRect.left &&\n      clickX <= imgRect.left + imgWidth &&\n      clickY >= imgRect.top &&\n      clickY <= imgRect.top + imgHeight\n    ) {\n      this.setState({\n        rectCoOrdinates: { x: clickX, y: clickY },\n      });\n    } else {\n      this.setState({\n        taggingEnabled: false,\n        rectCoOrdinates: null,\n      });\n      window.removeEventListener(\"click\", this.handleTagging);\n    }\n  };\n\n  onToggleTag = (event) => {\n    event.stopPropagation();\n    this.setState((state) => {\n      if (state.taggingEnabled) {\n        window.removeEventListener(\"click\", this.handleTagging);\n        return {\n          ...state,\n          taggingEnabled: false,\n          rectCoOrdinates: null,\n          tagToDisplay: null,\n        };\n      } else {\n        window.addEventListener(\"click\", this.handleTagging);\n        return {\n          ...state,\n          taggingEnabled: true,\n          tagToDisplay: null,\n        };\n      }\n    });\n  };\n\n  saveTag = (coOrdinates, tagText) => {\n    this.setState((state) => {\n      return {\n        ...state,\n        taggingEnabled: false,\n        rectCoOrdinates: null,\n        savedTags: [\n          ...state.savedTags,\n          { rectX: coOrdinates.x, rectY: coOrdinates.y, tagText: tagText },\n        ],\n      };\n    });\n  };\n\n  onMouseMoveOverImg = (event) => {\n    if (this.state.taggingEnabled === false) {\n      const { clientX, clientY } = event;\n      const { savedTags } = this.state;\n      let tagToDisplay = null;\n      for (let i = 0; i < savedTags.length; i++) {\n        const { rectX, rectY } = savedTags[i];\n        const x = rectX - 40;\n        const y = rectY - 50;\n        if (\n          clientX >= x &&\n          clientX <= x + 80 &&\n          clientY >= y &&\n          clientY <= y + 100\n        ) {\n          tagToDisplay = savedTags[i];\n          break;\n        }\n      }\n      this.setState({\n        tagToShow: tagToDisplay,\n      });\n    }\n  };\n\n  renderTagOnHover = () => {\n    const { taggingEnabled, tagToShow } = this.state;\n    if (taggingEnabled || tagToShow === null) {\n      return null;\n    }\n    const { rectX, rectY, tagText } = tagToShow;\n    return (\n      <TaggingRect\n        rectCoOrdinates={{ x: rectX, y: rectY }}\n        isEditing={false}\n        tagText={tagText}\n      />\n    );\n  };\n\n  render() {\n    const { src } = this.props;\n    const { taggingEnabled, rectCoOrdinates } = this.state;\n    return (\n      <div className=\"taggable-image\">\n        <img\n          src={src}\n          alt=\"\"\n          className={`${taggingEnabled ? \"tagging-enabled\" : \"\"}`}\n          ref={this.imgRef}\n          onMouseMove={this.onMouseMoveOverImg}\n        />\n        <button className=\"tag-btn\" onClick={this.onToggleTag}>\n          Add Tag\n        </button>\n        {rectCoOrdinates ? (\n          <TaggingRect\n            rectCoOrdinates={rectCoOrdinates}\n            isEditing={true}\n            onSaveTag={this.saveTag}\n          />\n        ) : null}\n        {this.renderTagOnHover()}\n      </div>\n    );\n  }\n}\n\nexport default TaggableImage;\n","export default __webpack_public_path__ + \"static/media/group-sample.ca299d4d.jpeg\";","import \"./App.css\";\nimport TaggableImage from \"./Components/taggable-image/index\";\nimport SampleImageUrl from \"./group-sample.jpeg\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TaggableImage src={SampleImageUrl} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n//import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}